Name: Shambhavi Verma
Roll No: 2101CS89
Course: CS209-CS210 Computer Architecture

DECLARATION OF AUTHORSHIP
~~~~~~~~~~~~~~~~~~~~~~~~~

This txt file, claims.txt, is part of the assignment of CS209-CS210 at the department of Computer Science and Engineering, IIT Patna .

The files contained in the project folder all belong to the aforementioned author and are single-handedly made without any help from outside sources.

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

PROGRAM STRUCTURE:
~~~~~~~~~~~~~~~~~~

The paths of the files used in the code are hardcoded.

+ The ASSEMBLER:

    * uses a single routine for both passes.
    * detects errors related to nomenclature of labels
    * consistent and sensible formatting with sensible program structure. 
    * sensible variable, function & type names with explanatory comments.
	* produces a listing file and machine code
	* assembles test programs.

+ The EMULATOR
    * executes the machine code generated by assembler
    * produces a record mentioning the value of Reg_A, Reg_B, Stack Pointer, Program Counter.

============================================================================================================================

WHAT WORKS:
A) Includes checking for labels and their correct nomenclature (Should not contain number as start, should contain alphanum and _ and nums only)
B) Includes checking for mnemonics and the number of arguments and jumps (incase of labels)
C) Uses map from C++ STL Library (GNU G++14 6.4.0 version) to check for mnemonics and labels.
D) Has custom hashing function to process queries faster and to avoid clashes.
E) Two pass assembler
F) First checks syntactical errors
G) Second checks semantical errors


=====================
EXAMPLE CASES:
=====================
1. test1.asm
with asm.txt
with log.txt
with list.txt
with emu_o.txt
=====================
2. test2.asm
with asm.txt
with log.txt
with list.txt
with emu_o.txt
=====================
3. test3.asm
with asm.txt
with log.txt
with list.txt
with emu_o.txt
=====================
4. test4.asm
with asm.txt
with log.txt
with list.txt
with emu_o.txt
=====================
5. test5.asm (finds sum of n numbers)
with asm.txt
with log.txt
with list.txt
with emu_o.txt
=====================
6. test6.asm (find mean of n numbers)
with asm.txt
with log.txt
with list.txt
with emu_o.txt
=====================
7. test7.asm (find multiplication of 2 numbers)
with asm.txt
with log.txt
with list.txt
with emu_o.txt

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////